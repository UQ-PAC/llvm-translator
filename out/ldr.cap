; ModuleID = '<stdin>'
source_filename = "test"
target datalayout = "e-m:e-i64:64-i128:128-n32:64-S128"

@X0 = internal global i64 0
@X1 = internal global i64 0
@X2 = internal global i64 0
@X3 = internal global i64 0
@X4 = internal global i64 0
@X5 = internal global i64 0
@X6 = internal global i64 0
@X7 = internal global i64 0
@X8 = internal global i64 0
@X9 = internal global i64 0
@X10 = internal global i64 0
@X11 = internal global i64 0
@X12 = internal global i64 0
@X13 = internal global i64 0
@X14 = internal global i64 0
@X15 = internal global i64 0
@X16 = internal global i64 0
@X17 = internal global i64 0
@X18 = internal global i64 0
@X19 = internal global i64 0
@X20 = internal global i64 0
@X21 = internal global i64 0
@X22 = internal global i64 0
@X23 = internal global i64 0
@X24 = internal global i64 0
@X25 = internal global i64 0
@X26 = internal global i64 0
@X27 = internal global i64 0
@X28 = internal global i64 0
@X29 = internal global i64 0
@X30 = internal global i64 0
@X31 = internal global i64 0
@V0 = internal global i128 0
@V1 = internal global i128 0
@V2 = internal global i128 0
@V3 = internal global i128 0
@V4 = internal global i128 0
@V5 = internal global i128 0
@V6 = internal global i128 0
@V7 = internal global i128 0
@V8 = internal global i128 0
@V9 = internal global i128 0
@V10 = internal global i128 0
@V11 = internal global i128 0
@V12 = internal global i128 0
@V13 = internal global i128 0
@V14 = internal global i128 0
@V15 = internal global i128 0
@V16 = internal global i128 0
@V17 = internal global i128 0
@V18 = internal global i128 0
@V19 = internal global i128 0
@V20 = internal global i128 0
@V21 = internal global i128 0
@V22 = internal global i128 0
@V23 = internal global i128 0
@V24 = internal global i128 0
@V25 = internal global i128 0
@V26 = internal global i128 0
@V27 = internal global i128 0
@V28 = internal global i128 0
@V29 = internal global i128 0
@V30 = internal global i128 0
@V31 = internal global i128 0
@NF = internal global i1 false
@ZF = internal global i1 false
@CF = internal global i1 false
@VF = internal global i1 false
@PC = internal global i64 0

define void @main() {
entry:
  %0 = load i64, ptr @X2, align 8
  %1 = load i64, ptr @X3, align 8
  %2 = add i64 %0, %1
  %3 = inttoptr i64 %2 to ptr
  %4 = load i64, ptr %3, align 8
  store i64 %4, ptr @X1, align 8
  %5 = load i64, ptr @PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, ptr @PC, align 8
  ret void
}

declare void @capstone_call(i64)

define void @capstone_return(i64 %0) {
  %2 = sub i64 %0, 4
  store i64 %2, ptr @PC, align 8
  ret void
}

define void @capstone_branch(i64 %0) {
  %2 = sub i64 %0, 4
  store i64 %2, ptr @PC, align 8
  ret void
}

define void @capstone_branch_cond(i1 %0, i64 %1) {
  %3 = load i64, ptr @PC, align 8
  %4 = sub i64 %1, 4
  %5 = select i1 %0, i64 %4, i64 %3
  store i64 %5, ptr @PC, align 8
  ret void
}
